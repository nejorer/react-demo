{"version":3,"sources":["common/components/Tabel/index.tsx","pages/Forms/index.tsx","common/mock/mock.js","common/services/index.ts","common/hooks/useQueryFilter.ts","common/hooks/useModalFilter.ts","App.tsx","common/hooks/useTabelData.ts","index.tsx"],"names":["confirm","UserTable","props","users","searchName","dataSource","filter","user","name","indexOf","map","Object","assign","key","id","showDeleteConfirm","record","title","icon","ExclamationCircleOutlined","okText","okType","cancelText","onOk","deleteUser","onCancel","console","log","columns","dataIndex","render","text","onClick","editRow","style","marginRight","Forms","useState","currentUser","setUser","handleInputChange","event","target","value","onFinish","editing","editUser","addUser","Item","label","initialValue","rules","required","message","onChange","age","type","htmlType","data","Mock","mock","success","options","params","JSON","parse","body","concat","newdata","length","url","getStrategyTable","queryFilter","a","axios","get","result","post","curUser","queryFilterInit","visible","initUser","Header","Content","Search","App","setQueryFilter","setSearchName","loadUser","useCallback","preState","findUser","useQueryFilter","userData","setUserdata","queryTableData","returnData","useEffect","useTabelData","setCurrentUser","setEditing","setVisible","resetCurrentUser","closeModal","modalAdd","modalEdit","useModalFilter","className","placeholder","onSearch","width","PlusOutlined","destroyOnClose","footer","nanoid","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b4a03588.chunk.js","sourcesContent":["import {FC, ReactElement} from 'react';\r\nimport { Table,Button,Modal } from 'antd'\r\nimport { ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {IUsers} from '../../types'\r\nconst { confirm } = Modal;\r\n\r\n\r\ninterface IProps{\r\n    users:IUsers[];\r\n    searchName:string;\r\n    deleteUser:(record:any)=>void;\r\n    editRow:(record:any)=>void;\r\n}\r\n\r\n\r\nconst UserTable:FC<IProps> = (props):ReactElement => { \r\n    //Each child in a list should have a unique \"key\" \r\n    const {users,searchName} = props\r\n    \r\n    let newData:IUsers[]\r\n    if(searchName===''){\r\n        newData = users\r\n    }else{\r\n        newData = users.filter(user =>{\r\n                if(user.name.indexOf(searchName)!==-1){\r\n                    return true\r\n                }\r\n                return false\r\n            }\r\n        )\r\n    }\r\n    \r\n    const dataSource  = newData.map(user=>{\r\n        return Object.assign(user,{key:user.id})\r\n    })\r\n    \r\n    const showDeleteConfirm = (record:IUsers)=>{\r\n        return ()=>{         \r\n            confirm({\r\n                title: '确认删除吗？',\r\n                icon: <ExclamationCircleOutlined />,\r\n                // content: 'Some descriptions',\r\n                okText: '确认',\r\n                okType: 'danger',\r\n                cancelText: '取消',\r\n                onOk() {\r\n                    props.deleteUser(record)\r\n                },\r\n                onCancel() {\r\n                  console.log('Cancel');\r\n                },\r\n            }); \r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: '年龄',\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            render: (text:any, record:IUsers) => (\r\n                <div>\r\n                    <Button onClick={() => props.editRow(record)} style={{marginRight:'5px'}}>编辑</Button>\r\n                    <Button onClick={showDeleteConfirm(record)}>删除</Button>\r\n                </div>\r\n            )\r\n        },\r\n    ];\r\n    return (\r\n        <div>\r\n            <Table dataSource={dataSource} columns={columns} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserTable;\r\n\r\n","import {FC,ReactElement,useState} from 'react';\r\nimport {Button,Input,Form} from 'antd'\r\nimport {IUsers} from '../../common/types'\r\n\r\ninterface IProps{\r\n    currentUser:IUsers;  // 打开Modal时候默认显示的用户  添加时为空\r\n    editing:boolean;     //是否处于编辑状态\r\n    addUser:(user:IUsers)=>void;  //添加用户方法\r\n    editUser:(user:IUsers)=>void;  //修改用户方法\r\n}\r\nconst Forms:FC<IProps> = (props):ReactElement => {\r\n\r\n    const [user,setUser] = useState<IUsers>(props.currentUser)\r\n    const handleInputChange = (event:any) =>{\r\n        const {id,value} = event.target\r\n        setUser({...user,[id]:value})      \r\n    }    \r\n    const handleSubmit = () =>{\r\n        props.editing ? (props.editUser(user) ):\r\n        (props.addUser(user))\r\n    }\r\n    return (\r\n        <Form onFinish={handleSubmit}>\r\n            <Form.Item\r\n                label=\"姓名\"\r\n                name=\"name\"\r\n                initialValue={user.name}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入姓名！',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input onChange={handleInputChange}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"年龄\"\r\n                name=\"age\"\r\n                initialValue={user.age}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入年龄！',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input onChange={handleInputChange}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Forms;\r\n","// 使用 Mock\r\nimport Mock from 'mockjs'\r\n\r\nlet data = [\r\n    {\r\n        \"id\":1,\r\n        \"name\": \"张三1\",\r\n        \"age\":18\r\n    },\r\n    {\r\n        \"id\":2,\r\n        \"name\": \"李四1\",\r\n        \"age\":28\r\n    },\r\n    {\r\n        \"id\":3,\r\n        \"name\": \"王五1\",\r\n        \"age\":38\r\n    },\r\n    {\r\n        \"id\":4,\r\n        \"name\": \"小黑1\",\r\n        \"age\":38\r\n    },\r\n    {\r\n        \"id\":5,\r\n        \"name\": \"小方1\",\r\n        \"age\":48\r\n    },\r\n    {\r\n        \"id\":6,\r\n        \"name\": \"张三2\",\r\n        \"age\":18\r\n    },\r\n    {\r\n        \"id\":7,\r\n        \"name\": \"李四2\",\r\n        \"age\":28\r\n    },\r\n    {\r\n        \"id\":8,\r\n        \"name\": \"王五2\",\r\n        \"age\":38\r\n    },\r\n    {\r\n        \"id\":9,\r\n        \"name\": \"小黑2\",\r\n        \"age\":38\r\n    },\r\n    {\r\n        \"id\":10,\r\n        \"name\": \"小方2\",\r\n        \"age\":48\r\n    },\r\n    {\r\n        \"id\":11,\r\n        \"name\": \"张三3\",\r\n        \"age\":118\r\n    },\r\n    {\r\n        \"id\":12,\r\n        \"name\": \"李四3\",\r\n        \"age\":128\r\n    },\r\n    {\r\n        \"id\":13,\r\n        \"name\": \"王五3\",\r\n        \"age\":138\r\n    },\r\n    {\r\n        \"id\":14,\r\n        \"name\": \"小黑3\",\r\n        \"age\":138\r\n    },\r\n    {\r\n        \"id\":15,\r\n        \"name\": \"小方3\",\r\n        \"age\":148\r\n    },\r\n    {\r\n        \"id\":16,\r\n        \"name\": \"张三4\",\r\n        \"age\":118\r\n    },\r\n    {\r\n        \"id\":17,\r\n        \"name\": \"李四4\",\r\n        \"age\":128\r\n    },\r\n    {\r\n        \"id\":18,\r\n        \"name\": \"王五4\",\r\n        \"age\":138\r\n    },\r\n    {\r\n        \"id\":19,\r\n        \"name\": \"小黑4\",\r\n        \"age\":138\r\n    },\r\n    {\r\n        \"id\":20,\r\n        \"name\": \"小方4\",\r\n        \"age\":148\r\n    },\r\n]\r\n\r\nMock.mock('/userdata','get',{\r\n    success: true,\r\n    \"data\": data\r\n})\r\n\r\nMock.mock('/userdata','post',(options)=>{\r\n    let params = JSON.parse(options.body)\r\n    //判断操作类型并返回操作结果\r\n    if(params.type===\"delete\"){\r\n        console.log(\"进入删除了\",params);\r\n        data = data.filter(user => user.id!==params.user.id)\r\n        return data;\r\n    }\r\n    else if(params.type===\"add\"){\r\n        console.log(\"进入添加了\");\r\n        // console.log(params.user);\r\n        data = data.concat(params.user)\r\n        return data\r\n    }\r\n    else if(params.type===\"edit\"){\r\n        console.log(\"进入修改了\");\r\n        // console.log(params.user);\r\n        data = data.map(user=>\r\n            (user.id===params.user.id ? params.user : user)\r\n        )\r\n        return data\r\n    }\r\n    else if(params.type===\"find\"){\r\n        console.log(\"进入查找了\");\r\n        const newdata = data.filter(user =>{\r\n                if(user.name.indexOf(params.name)!==-1){\r\n                    return true\r\n                }\r\n                return false\r\n            }\r\n        )\r\n        //判断输入长度大于0 则返回搜索结果 不然返回所有数据\r\n        if(params.name.length>0){\r\n            return newdata\r\n        }\r\n        return data;\r\n    }\r\n})","// import { useState,useCallback } from 'react';\r\nimport {QueryFilter} from '../types'\r\nimport axios from 'axios';\r\nimport '../mock/mock.js'\r\nconst url = \"http://localhost:3001/\"\r\n\r\nexport async function getStrategyTable(queryFilter: QueryFilter){\r\n    // const result = await axios.get(url+'api/users')\r\n    // console.log(result.data);\r\n    // return []\r\n    \r\n    if(queryFilter.type===\"load\"){\r\n        const result = await axios.get(\r\n            url + 'api/users',\r\n        );\r\n        return result.data\r\n    }\r\n    else if(queryFilter.type===\"add\"){\r\n        const result = await axios.post(\r\n            url + 'api/add',\r\n            {user:queryFilter.curUser,type:\"add\"}\r\n        ); \r\n        return result.data\r\n    }\r\n    else if(queryFilter.type===\"delete\"){\r\n        const result = await axios.post(\r\n            url + 'api/delete',\r\n            {user:queryFilter.curUser,type:\"delete\"}\r\n        ); \r\n        return result.data\r\n    }\r\n    else if(queryFilter.type===\"edit\"){\r\n        const result = await axios.post(\r\n            url + 'api/edit',\r\n            {user:queryFilter.curUser,type:\"edit\"}\r\n        ); \r\n        return result.data\r\n    }\r\n    // else if(queryFilter.type===\"query\"){\r\n    //     console.log(\"queryFilter.searchName\",queryFilter.searchName);\r\n        \r\n    //     const result = await axios.post(\r\n    //         url + 'api/query',\r\n    //         {user:queryFilter.searchName,type:\"query\"}\r\n    //     );\r\n    //     return result.data\r\n    //     // return result.data\r\n    // }\r\n}\r\n\r\n","import {useState,useCallback } from 'react';\r\nimport {IUsers,QueryFilter} from '../types'\r\n\r\nconst initUser:IUsers = {\r\n    id: 0,\r\n    name: '',\r\n    age: ''\r\n}\r\nconst queryFilterInit = {\r\n    type:\"load\",\r\n    curUser:initUser,\r\n    visible:false,\r\n    searchName:''\r\n}\r\n\r\n//这些方法通过改变queryFilter来触发useTabelData\r\nexport  default function useQueryFilter(){\r\n    const [queryFilter,setQueryFilter] = useState<QueryFilter>(queryFilterInit)\r\n    const [searchName,setSearchName] = useState<string>('')\r\n    const loadUser = useCallback(\r\n        () => {\r\n            setQueryFilter((preState)=>{\r\n                return {\r\n                    ...preState,\r\n                    type:'load',\r\n                }\r\n            })\r\n        },\r\n        [setQueryFilter],\r\n    )\r\n    const addUser = useCallback(\r\n        (user) => {\r\n            console.log(\"useQueryFilterTest addUser\");\r\n            setQueryFilter((preState)=>{\r\n                console.log(\"preState\",preState);\r\n                \r\n                return {\r\n                    ...preState,\r\n                    type:'add',\r\n                    curUser:user,\r\n                    visible:false\r\n                }\r\n            })\r\n            console.log(\"useQueryFilterTest addUser end\");\r\n        },\r\n        [setQueryFilter],\r\n    )\r\n    const deleteUser = useCallback(\r\n        (user) => {\r\n            console.log(\"useQueryFilterTest deleteUser\");\r\n            setQueryFilter((preState)=>{\r\n                return {\r\n                    ...preState,\r\n                    type:'delete',\r\n                    curUser:user,\r\n                    visible:false\r\n                }\r\n            })\r\n            console.log(\"useQueryFilterTest deleteUser end\");\r\n        },\r\n        [setQueryFilter],\r\n    )\r\n    const editUser = useCallback(\r\n        (user) => {\r\n            console.log(\"useQueryFilterTest deleteUser\");\r\n            setQueryFilter((preState)=>{\r\n                return {\r\n                    ...preState,\r\n                    type:'edit',\r\n                    curUser:user,\r\n                    visible:false\r\n                }\r\n            })\r\n            console.log(\"useQueryFilterTest deleteUser end\");\r\n        },\r\n        [setQueryFilter],\r\n    )\r\n    const findUser = useCallback(\r\n        (name) => {\r\n            setSearchName(name)\r\n        },\r\n        [setSearchName],\r\n    )\r\n    return {\r\n        queryFilter,\r\n        searchName,\r\n        addUser,\r\n        deleteUser,\r\n        editUser,\r\n        findUser,\r\n        loadUser\r\n    }\r\n}\r\n","import {useState,useCallback} from 'react'\r\nimport {IUsers} from '../types'\r\n\r\nconst initUser = {\r\n    id: 0,\r\n    name: '',\r\n    age: ''\r\n  }\r\nexport default function useModalFilter() {\r\n    //用于编辑时候显示对应那一条数据\r\n    const [currentUser, setCurrentUser] = useState<IUsers>(initUser)\r\n    //用于判断是编辑还是创建用户\r\n    const [editing,setEditing] = useState<boolean>(false)\r\n    //用于打开Modal\r\n    const [visible,setVisible] = useState<boolean>(false)\r\n\r\n    //重置currentUser 使得使用添加功能时候不会出现有默认字符\r\n    const resetCurrentUser = useCallback(\r\n        () => {\r\n            // if(editing===false){\r\n            setCurrentUser(initUser)\r\n            // }\r\n        },\r\n        [setCurrentUser],\r\n    )\r\n      \r\n    // //关闭对话框\r\n    const closeModal = useCallback(\r\n        () => {\r\n            setVisible(false);\r\n            setEditing(false);\r\n        },\r\n        [setVisible,setEditing],\r\n    )\r\n    //触发Modal的增加\r\n    const modalAdd = useCallback(\r\n        () => {\r\n            console.log(\"handleAdd\");\r\n            setVisible(true)\r\n            setEditing(false)\r\n        },\r\n        [setVisible,setEditing],\r\n    )\r\n    //触发Modal的修改\r\n    const modalEdit = useCallback(\r\n        (user:IUsers) => {\r\n            setCurrentUser(user)\r\n            setVisible(true);\r\n            setEditing(true)\r\n        },\r\n        [setCurrentUser,setVisible,setEditing],\r\n    )\r\n    return {\r\n        currentUser,\r\n        editing,\r\n        visible,\r\n        closeModal,\r\n        modalAdd,\r\n        modalEdit,\r\n        resetCurrentUser\r\n    }\r\n}\r\n","import {FC,useEffect} from 'react';\nimport { Modal,Button,Layout,Input } from 'antd';\nimport { PlusOutlined} from '@ant-design/icons';\nimport UserTable from './common/components/Tabel'\nimport Forms from './pages/Forms'\nimport useTabelData from './common/hooks/useTabelData'\nimport useQueryFilter from './common/hooks/useQueryFilter'\nimport useModalFilter from './common/hooks/useModalFilter'\nimport '@/common/mock/mock.js'\nimport '@/App.css'\nimport {nanoid} from 'nanoid'\nconst { Header, Content } = Layout;\nconst {Search} = Input;\n\n// setState 会触发App组件重新渲染  \n\nconst App:FC = () => {\n  //-----------------------增删改查以及显示部分-----------------------//\n  const {\n    queryFilter,\n    searchName,//查关键词，因为不需要重新请求数据，所以额外起了一个变量\n    addUser,  //增加方法\n    deleteUser,//删除方法\n    editUser,//改方法\n    findUser,//查方法\n  }=useQueryFilter()\n  // 调用上述方法会触发queryFilter 或 searchName 改变\n  const {userData} = useTabelData(queryFilter)\n  //-----------------------增删改查以及显示部分-----------------------//\n\n  //-----------------------对话框部分-----------------------//\n  const {\n      currentUser,\n      editing,\n      visible,\n      closeModal,\n      modalAdd,  //弹出添加用户页面\n      modalEdit, //弹出修改用户页面\n      resetCurrentUser\n  } = useModalFilter()\n  // 当完成addUser/editUser后，queryFilter会发生改变，然\n  useEffect(()=>{\n    closeModal()\n  },[userData,closeModal])\n  //当完成修改后 editing 会修改为false 此时对currentUser进行reset\n  //就是判断editing 修改且变为false时候 进行关闭\n  useEffect(()=>{\n    if(editing===false){\n      resetCurrentUser()\n    }\n  },[editing,resetCurrentUser])\n  console.log(\"searchName\",searchName);\n  \n  //-----------------------对话框部分-----------------------//\n \n  return (\n    <Layout>\n      <Header className=\"header\"><h1>用户列表</h1></Header>\n      <Content className=\"content\">\n        <Search placeholder=\"输入姓名进行查找\" onSearch={findUser} style={{ width: 200 } } />\n        <Button className=\"addUser\" onClick={modalAdd}> <PlusOutlined />添加用户</Button>\n        <UserTable users={userData} searchName={searchName} deleteUser={deleteUser} editRow={modalEdit}/>\n        <Modal \n          title={editing? \"编辑用户\":\"添加用户\"}\n          visible={visible} \n          onCancel={closeModal}\n          destroyOnClose={true}\n          footer={null}\n          >\n            <Forms currentUser={currentUser.name==='' ? {...currentUser,id:nanoid()}:currentUser} \n            editing = {editing}\n            addUser ={addUser} editUser={editUser}/>\n        </Modal>\n      </Content>\n    </Layout>\n\n  );\n}\n\nexport default App;\n\n\n","import {useEffect,useState,useCallback} from 'react'\r\nimport {getStrategyTable} from '../services/index'\r\nimport '../mock/mock.js'\r\nimport {QueryFilter} from '../types'\r\n\r\nexport default function useTabelData(queryFilter: QueryFilter) {\r\n  const [userData, setUserdata] = useState([])\r\n  const queryTableData = useCallback(async () => {\r\n    try {\r\n      const returnData = await getStrategyTable(queryFilter)\r\n      setUserdata(returnData)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, [queryFilter])\r\n  useEffect(() => {\r\n    queryTableData()\r\n  }, [queryTableData])\r\n  return {userData}\r\n}\r\n\r\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}